// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MarketCreated extends EthereumEvent {
  get params(): MarketCreated__Params {
    return new MarketCreated__Params(this);
  }
}

export class MarketCreated__Params {
  _event: MarketCreated;

  constructor(event: MarketCreated) {
    this._event = event;
  }

  get topic(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get description(): string {
    return this._event.parameters[1].value.toString();
  }

  get extraInfo(): string {
    return this._event.parameters[2].value.toString();
  }

  get universe(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get marketCreator(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get outcomes(): Array<Bytes> {
    return this._event.parameters[6].value.toBytesArray();
  }

  get marketCreationFee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get maxPrice(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get marketType(): i32 {
    return this._event.parameters[10].value.toI32();
  }
}

export class InitialReportSubmitted extends EthereumEvent {
  get params(): InitialReportSubmitted__Params {
    return new InitialReportSubmitted__Params(this);
  }
}

export class InitialReportSubmitted__Params {
  _event: InitialReportSubmitted;

  constructor(event: InitialReportSubmitted) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountStaked(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isDesignatedReporter(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get payoutNumerators(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get invalid(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class DisputeCrowdsourcerCreated extends EthereumEvent {
  get params(): DisputeCrowdsourcerCreated__Params {
    return new DisputeCrowdsourcerCreated__Params(this);
  }
}

export class DisputeCrowdsourcerCreated__Params {
  _event: DisputeCrowdsourcerCreated;

  constructor(event: DisputeCrowdsourcerCreated) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get disputeCrowdsourcer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get payoutNumerators(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get size(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get invalid(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class DisputeCrowdsourcerContribution extends EthereumEvent {
  get params(): DisputeCrowdsourcerContribution__Params {
    return new DisputeCrowdsourcerContribution__Params(this);
  }
}

export class DisputeCrowdsourcerContribution__Params {
  _event: DisputeCrowdsourcerContribution;

  constructor(event: DisputeCrowdsourcerContribution) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get disputeCrowdsourcer(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amountStaked(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DisputeCrowdsourcerCompleted extends EthereumEvent {
  get params(): DisputeCrowdsourcerCompleted__Params {
    return new DisputeCrowdsourcerCompleted__Params(this);
  }
}

export class DisputeCrowdsourcerCompleted__Params {
  _event: DisputeCrowdsourcerCompleted;

  constructor(event: DisputeCrowdsourcerCompleted) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get disputeCrowdsourcer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class InitialReporterRedeemed extends EthereumEvent {
  get params(): InitialReporterRedeemed__Params {
    return new InitialReporterRedeemed__Params(this);
  }
}

export class InitialReporterRedeemed__Params {
  _event: InitialReporterRedeemed;

  constructor(event: InitialReporterRedeemed) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get repReceived(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get reportingFeesReceived(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get payoutNumerators(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }
}

export class DisputeCrowdsourcerRedeemed extends EthereumEvent {
  get params(): DisputeCrowdsourcerRedeemed__Params {
    return new DisputeCrowdsourcerRedeemed__Params(this);
  }
}

export class DisputeCrowdsourcerRedeemed__Params {
  _event: DisputeCrowdsourcerRedeemed;

  constructor(event: DisputeCrowdsourcerRedeemed) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get disputeCrowdsourcer(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amountRedeemed(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get repReceived(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get reportingFeesReceived(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get payoutNumerators(): Array<BigInt> {
    return this._event.parameters[7].value.toBigIntArray();
  }
}

export class ReportingParticipantDisavowed extends EthereumEvent {
  get params(): ReportingParticipantDisavowed__Params {
    return new ReportingParticipantDisavowed__Params(this);
  }
}

export class ReportingParticipantDisavowed__Params {
  _event: ReportingParticipantDisavowed;

  constructor(event: ReportingParticipantDisavowed) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get reportingParticipant(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MarketParticipantsDisavowed extends EthereumEvent {
  get params(): MarketParticipantsDisavowed__Params {
    return new MarketParticipantsDisavowed__Params(this);
  }
}

export class MarketParticipantsDisavowed__Params {
  _event: MarketParticipantsDisavowed;

  constructor(event: MarketParticipantsDisavowed) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeWindowRedeemed extends EthereumEvent {
  get params(): FeeWindowRedeemed__Params {
    return new FeeWindowRedeemed__Params(this);
  }
}

export class FeeWindowRedeemed__Params {
  _event: FeeWindowRedeemed;

  constructor(event: FeeWindowRedeemed) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get feeWindow(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reportingFeesReceived(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MarketFinalized extends EthereumEvent {
  get params(): MarketFinalized__Params {
    return new MarketFinalized__Params(this);
  }
}

export class MarketFinalized__Params {
  _event: MarketFinalized;

  constructor(event: MarketFinalized) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarketMigrated extends EthereumEvent {
  get params(): MarketMigrated__Params {
    return new MarketMigrated__Params(this);
  }
}

export class MarketMigrated__Params {
  _event: MarketMigrated;

  constructor(event: MarketMigrated) {
    this._event = event;
  }

  get market(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get originalUniverse(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newUniverse(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UniverseForked extends EthereumEvent {
  get params(): UniverseForked__Params {
    return new UniverseForked__Params(this);
  }
}

export class UniverseForked__Params {
  _event: UniverseForked;

  constructor(event: UniverseForked) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UniverseCreated extends EthereumEvent {
  get params(): UniverseCreated__Params {
    return new UniverseCreated__Params(this);
  }
}

export class UniverseCreated__Params {
  _event: UniverseCreated;

  constructor(event: UniverseCreated) {
    this._event = event;
  }

  get parentUniverse(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get childUniverse(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get payoutNumerators(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get invalid(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class OrderCanceled extends EthereumEvent {
  get params(): OrderCanceled__Params {
    return new OrderCanceled__Params(this);
  }
}

export class OrderCanceled__Params {
  _event: OrderCanceled;

  constructor(event: OrderCanceled) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shareToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get orderId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get orderType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tokenRefund(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get sharesRefund(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OrderCreated extends EthereumEvent {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get orderType(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get moneyEscrowed(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get sharesEscrowed(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get tradeGroupId(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }

  get orderId(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get universe(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get shareToken(): Address {
    return this._event.parameters[9].value.toAddress();
  }
}

export class OrderFilled extends EthereumEvent {
  get params(): OrderFilled__Params {
    return new OrderFilled__Params(this);
  }
}

export class OrderFilled__Params {
  _event: OrderFilled;

  constructor(event: OrderFilled) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shareToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get filler(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get orderId(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get numCreatorShares(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get numCreatorTokens(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get numFillerShares(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get numFillerTokens(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get marketCreatorFees(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get reporterFees(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get amountFilled(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get tradeGroupId(): Bytes {
    return this._event.parameters[11].value.toBytes();
  }
}

export class CompleteSetsPurchased extends EthereumEvent {
  get params(): CompleteSetsPurchased__Params {
    return new CompleteSetsPurchased__Params(this);
  }
}

export class CompleteSetsPurchased__Params {
  _event: CompleteSetsPurchased;

  constructor(event: CompleteSetsPurchased) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get numCompleteSets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CompleteSetsSold extends EthereumEvent {
  get params(): CompleteSetsSold__Params {
    return new CompleteSetsSold__Params(this);
  }
}

export class CompleteSetsSold__Params {
  _event: CompleteSetsSold;

  constructor(event: CompleteSetsSold) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get numCompleteSets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TradingProceedsClaimed extends EthereumEvent {
  get params(): TradingProceedsClaimed__Params {
    return new TradingProceedsClaimed__Params(this);
  }
}

export class TradingProceedsClaimed__Params {
  _event: TradingProceedsClaimed;

  constructor(event: TradingProceedsClaimed) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shareToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get numShares(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get numPayoutTokens(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get finalTokenBalance(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class TokensTransferred extends EthereumEvent {
  get params(): TokensTransferred__Params {
    return new TokensTransferred__Params(this);
  }
}

export class TokensTransferred__Params {
  _event: TokensTransferred;

  constructor(event: TokensTransferred) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get tokenType(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get market(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class TokensMinted extends EthereumEvent {
  get params(): TokensMinted__Params {
    return new TokensMinted__Params(this);
  }
}

export class TokensMinted__Params {
  _event: TokensMinted;

  constructor(event: TokensMinted) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get market(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class TokensBurned extends EthereumEvent {
  get params(): TokensBurned__Params {
    return new TokensBurned__Params(this);
  }
}

export class TokensBurned__Params {
  _event: TokensBurned;

  constructor(event: TokensBurned) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get market(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class FeeWindowCreated extends EthereumEvent {
  get params(): FeeWindowCreated__Params {
    return new FeeWindowCreated__Params(this);
  }
}

export class FeeWindowCreated__Params {
  _event: FeeWindowCreated;

  constructor(event: FeeWindowCreated) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeWindow(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get id(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class InitialReporterTransferred extends EthereumEvent {
  get params(): InitialReporterTransferred__Params {
    return new InitialReporterTransferred__Params(this);
  }
}

export class InitialReporterTransferred__Params {
  _event: InitialReporterTransferred;

  constructor(event: InitialReporterTransferred) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class MarketTransferred extends EthereumEvent {
  get params(): MarketTransferred__Params {
    return new MarketTransferred__Params(this);
  }
}

export class MarketTransferred__Params {
  _event: MarketTransferred;

  constructor(event: MarketTransferred) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class MarketMailboxTransferred extends EthereumEvent {
  get params(): MarketMailboxTransferred__Params {
    return new MarketMailboxTransferred__Params(this);
  }
}

export class MarketMailboxTransferred__Params {
  _event: MarketMailboxTransferred;

  constructor(event: MarketMailboxTransferred) {
    this._event = event;
  }

  get universe(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get market(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mailbox(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class EscapeHatchChanged extends EthereumEvent {
  get params(): EscapeHatchChanged__Params {
    return new EscapeHatchChanged__Params(this);
  }
}

export class EscapeHatchChanged__Params {
  _event: EscapeHatchChanged;

  constructor(event: EscapeHatchChanged) {
    this._event = event;
  }

  get isOn(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class TimestampSet extends EthereumEvent {
  get params(): TimestampSet__Params {
    return new TimestampSet__Params(this);
  }
}

export class TimestampSet__Params {
  _event: TimestampSet;

  constructor(event: TimestampSet) {
    this._event = event;
  }

  get newTimestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  logDisputeCrowdsourcerRedeemed(
    _universe: Address,
    _reporter: Address,
    _market: Address,
    _amountRedeemed: BigInt,
    _repReceived: BigInt,
    _reportingFeesReceived: BigInt,
    _payoutNumerators: Array<BigInt>
  ): boolean {
    let result = super.call("logDisputeCrowdsourcerRedeemed", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_reporter),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromUnsignedBigInt(_amountRedeemed),
      EthereumValue.fromUnsignedBigInt(_repReceived),
      EthereumValue.fromUnsignedBigInt(_reportingFeesReceived),
      EthereumValue.fromUnsignedBigIntArray(_payoutNumerators)
    ]);
    return result[0].toBoolean();
  }

  logMarketCreated(
    _topic: Bytes,
    _description: string,
    _extraInfo: string,
    _universe: Address,
    _market: Address,
    _marketCreator: Address,
    _outcomes: Array<Bytes>,
    _minPrice: BigInt,
    _maxPrice: BigInt,
    _marketType: i32
  ): boolean {
    let result = super.call("logMarketCreated", [
      EthereumValue.fromFixedBytes(_topic),
      EthereumValue.fromString(_description),
      EthereumValue.fromString(_extraInfo),
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_marketCreator),
      EthereumValue.fromFixedBytesArray(_outcomes),
      EthereumValue.fromSignedBigInt(_minPrice),
      EthereumValue.fromSignedBigInt(_maxPrice),
      EthereumValue.fromI32(_marketType)
    ]);
    return result[0].toBoolean();
  }

  logOrderCreated(
    _orderType: i32,
    _amount: BigInt,
    _price: BigInt,
    _creator: Address,
    _moneyEscrowed: BigInt,
    _sharesEscrowed: BigInt,
    _tradeGroupId: Bytes,
    _orderId: Bytes,
    _universe: Address,
    _shareToken: Address
  ): boolean {
    let result = super.call("logOrderCreated", [
      EthereumValue.fromI32(_orderType),
      EthereumValue.fromUnsignedBigInt(_amount),
      EthereumValue.fromUnsignedBigInt(_price),
      EthereumValue.fromAddress(_creator),
      EthereumValue.fromUnsignedBigInt(_moneyEscrowed),
      EthereumValue.fromUnsignedBigInt(_sharesEscrowed),
      EthereumValue.fromFixedBytes(_tradeGroupId),
      EthereumValue.fromFixedBytes(_orderId),
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_shareToken)
    ]);
    return result[0].toBoolean();
  }

  logDisputeCrowdsourcerTokensBurned(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logDisputeCrowdsourcerTokensBurned", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logReportingParticipantDisavowed(
    _universe: Address,
    _market: Address
  ): boolean {
    let result = super.call("logReportingParticipantDisavowed", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market)
    ]);
    return result[0].toBoolean();
  }

  logMarketMigrated(_market: Address, _originalUniverse: Address): boolean {
    let result = super.call("logMarketMigrated", [
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_originalUniverse)
    ]);
    return result[0].toBoolean();
  }

  logMarketTransferred(
    _universe: Address,
    _from: Address,
    _to: Address
  ): boolean {
    let result = super.call("logMarketTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to)
    ]);
    return result[0].toBoolean();
  }

  logFeeTokenMinted(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logFeeTokenMinted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logMarketFinalized(_universe: Address): boolean {
    let result = super.call("logMarketFinalized", [
      EthereumValue.fromAddress(_universe)
    ]);
    return result[0].toBoolean();
  }

  getController(): Address {
    let result = super.call("getController", []);
    return result[0].toAddress();
  }

  logMarketMailboxTransferred(
    _universe: Address,
    _market: Address,
    _from: Address,
    _to: Address
  ): boolean {
    let result = super.call("logMarketMailboxTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to)
    ]);
    return result[0].toBoolean();
  }

  logFeeTokenTransferred(
    _universe: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("logFeeTokenTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    return result[0].toBoolean();
  }

  logFeeWindowRedeemed(
    _universe: Address,
    _reporter: Address,
    _amountRedeemed: BigInt,
    _reportingFeesReceived: BigInt
  ): boolean {
    let result = super.call("logFeeWindowRedeemed", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_reporter),
      EthereumValue.fromUnsignedBigInt(_amountRedeemed),
      EthereumValue.fromUnsignedBigInt(_reportingFeesReceived)
    ]);
    return result[0].toBoolean();
  }

  logReputationTokenBurned(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logReputationTokenBurned", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logUniverseForked(): boolean {
    let result = super.call("logUniverseForked", []);
    return result[0].toBoolean();
  }

  logDisputeCrowdsourcerCompleted(
    _universe: Address,
    _market: Address,
    _disputeCrowdsourcer: Address
  ): boolean {
    let result = super.call("logDisputeCrowdsourcerCompleted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_disputeCrowdsourcer)
    ]);
    return result[0].toBoolean();
  }

  logDisputeCrowdsourcerTokensTransferred(
    _universe: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("logDisputeCrowdsourcerTokensTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    return result[0].toBoolean();
  }

  logDisputeCrowdsourcerContribution(
    _universe: Address,
    _reporter: Address,
    _market: Address,
    _disputeCrowdsourcer: Address,
    _amountStaked: BigInt
  ): boolean {
    let result = super.call("logDisputeCrowdsourcerContribution", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_reporter),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_disputeCrowdsourcer),
      EthereumValue.fromUnsignedBigInt(_amountStaked)
    ]);
    return result[0].toBoolean();
  }

  logFeeWindowBurned(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logFeeWindowBurned", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logTradingProceedsClaimed(
    _universe: Address,
    _shareToken: Address,
    _sender: Address,
    _market: Address,
    _numShares: BigInt,
    _numPayoutTokens: BigInt,
    _finalTokenBalance: BigInt
  ): boolean {
    let result = super.call("logTradingProceedsClaimed", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_shareToken),
      EthereumValue.fromAddress(_sender),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromUnsignedBigInt(_numShares),
      EthereumValue.fromUnsignedBigInt(_numPayoutTokens),
      EthereumValue.fromUnsignedBigInt(_finalTokenBalance)
    ]);
    return result[0].toBoolean();
  }

  logFeeWindowMinted(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logFeeWindowMinted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logOrderCanceled(
    _universe: Address,
    _shareToken: Address,
    _sender: Address,
    _orderId: Bytes,
    _orderType: i32,
    _tokenRefund: BigInt,
    _sharesRefund: BigInt
  ): boolean {
    let result = super.call("logOrderCanceled", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_shareToken),
      EthereumValue.fromAddress(_sender),
      EthereumValue.fromFixedBytes(_orderId),
      EthereumValue.fromI32(_orderType),
      EthereumValue.fromUnsignedBigInt(_tokenRefund),
      EthereumValue.fromUnsignedBigInt(_sharesRefund)
    ]);
    return result[0].toBoolean();
  }

  logInitialReportSubmitted(
    _universe: Address,
    _reporter: Address,
    _market: Address,
    _amountStaked: BigInt,
    _isDesignatedReporter: boolean,
    _payoutNumerators: Array<BigInt>,
    _invalid: boolean
  ): boolean {
    let result = super.call("logInitialReportSubmitted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_reporter),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromUnsignedBigInt(_amountStaked),
      EthereumValue.fromBoolean(_isDesignatedReporter),
      EthereumValue.fromUnsignedBigIntArray(_payoutNumerators),
      EthereumValue.fromBoolean(_invalid)
    ]);
    return result[0].toBoolean();
  }

  logFeeWindowTransferred(
    _universe: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("logFeeWindowTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    return result[0].toBoolean();
  }

  logReputationTokenMinted(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logReputationTokenMinted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  disputeCrowdsourcerCreated(
    _universe: Address,
    _market: Address,
    _disputeCrowdsourcer: Address,
    _payoutNumerators: Array<BigInt>,
    _size: BigInt,
    _invalid: boolean
  ): boolean {
    let result = super.call("disputeCrowdsourcerCreated", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_disputeCrowdsourcer),
      EthereumValue.fromUnsignedBigIntArray(_payoutNumerators),
      EthereumValue.fromUnsignedBigInt(_size),
      EthereumValue.fromBoolean(_invalid)
    ]);
    return result[0].toBoolean();
  }

  logOrderFilled(
    _universe: Address,
    _shareToken: Address,
    _filler: Address,
    _orderId: Bytes,
    _numCreatorShares: BigInt,
    _numCreatorTokens: BigInt,
    _numFillerShares: BigInt,
    _numFillerTokens: BigInt,
    _marketCreatorFees: BigInt,
    _reporterFees: BigInt,
    _amountFilled: BigInt,
    _tradeGroupId: Bytes
  ): boolean {
    let result = super.call("logOrderFilled", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_shareToken),
      EthereumValue.fromAddress(_filler),
      EthereumValue.fromFixedBytes(_orderId),
      EthereumValue.fromUnsignedBigInt(_numCreatorShares),
      EthereumValue.fromUnsignedBigInt(_numCreatorTokens),
      EthereumValue.fromUnsignedBigInt(_numFillerShares),
      EthereumValue.fromUnsignedBigInt(_numFillerTokens),
      EthereumValue.fromUnsignedBigInt(_marketCreatorFees),
      EthereumValue.fromUnsignedBigInt(_reporterFees),
      EthereumValue.fromUnsignedBigInt(_amountFilled),
      EthereumValue.fromFixedBytes(_tradeGroupId)
    ]);
    return result[0].toBoolean();
  }

  logShareTokensTransferred(
    _universe: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("logShareTokensTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    return result[0].toBoolean();
  }

  createChildUniverse(
    _parentPayoutDistributionHash: Bytes,
    _parentPayoutNumerators: Array<BigInt>,
    _parentInvalid: boolean
  ): Address {
    let result = super.call("createChildUniverse", [
      EthereumValue.fromFixedBytes(_parentPayoutDistributionHash),
      EthereumValue.fromUnsignedBigIntArray(_parentPayoutNumerators),
      EthereumValue.fromBoolean(_parentInvalid)
    ]);
    return result[0].toAddress();
  }

  isKnownUniverse(_universe: Address): boolean {
    let result = super.call("isKnownUniverse", [
      EthereumValue.fromAddress(_universe)
    ]);
    return result[0].toBoolean();
  }

  logFeeWindowCreated(_feeWindow: Address, _id: BigInt): boolean {
    let result = super.call("logFeeWindowCreated", [
      EthereumValue.fromAddress(_feeWindow),
      EthereumValue.fromUnsignedBigInt(_id)
    ]);
    return result[0].toBoolean();
  }

  setController(_controller: Address): boolean {
    let result = super.call("setController", [
      EthereumValue.fromAddress(_controller)
    ]);
    return result[0].toBoolean();
  }

  createGenesisUniverse(): Address {
    let result = super.call("createGenesisUniverse", []);
    return result[0].toAddress();
  }

  logFeeTokenBurned(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logFeeTokenBurned", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logShareTokenBurned(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logShareTokenBurned", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logShareTokenMinted(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logShareTokenMinted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logEscapeHatchChanged(_isOn: boolean): boolean {
    let result = super.call("logEscapeHatchChanged", [
      EthereumValue.fromBoolean(_isOn)
    ]);
    return result[0].toBoolean();
  }

  logDisputeCrowdsourcerTokensMinted(
    _universe: Address,
    _target: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("logDisputeCrowdsourcerTokensMinted", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_target),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  isKnownCrowdsourcer(_crowdsourcer: Address): boolean {
    let result = super.call("isKnownCrowdsourcer", [
      EthereumValue.fromAddress(_crowdsourcer)
    ]);
    return result[0].toBoolean();
  }

  logMarketCreated1(
    _topic: Bytes,
    _description: string,
    _extraInfo: string,
    _universe: Address,
    _market: Address,
    _marketCreator: Address,
    _minPrice: BigInt,
    _maxPrice: BigInt,
    _marketType: i32
  ): boolean {
    let result = super.call("logMarketCreated", [
      EthereumValue.fromFixedBytes(_topic),
      EthereumValue.fromString(_description),
      EthereumValue.fromString(_extraInfo),
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_marketCreator),
      EthereumValue.fromSignedBigInt(_minPrice),
      EthereumValue.fromSignedBigInt(_maxPrice),
      EthereumValue.fromI32(_marketType)
    ]);
    return result[0].toBoolean();
  }

  logCompleteSetsPurchased(
    _universe: Address,
    _market: Address,
    _account: Address,
    _numCompleteSets: BigInt
  ): boolean {
    let result = super.call("logCompleteSetsPurchased", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_account),
      EthereumValue.fromUnsignedBigInt(_numCompleteSets)
    ]);
    return result[0].toBoolean();
  }

  logMarketParticipantsDisavowed(_universe: Address): boolean {
    let result = super.call("logMarketParticipantsDisavowed", [
      EthereumValue.fromAddress(_universe)
    ]);
    return result[0].toBoolean();
  }

  logTimestampSet(_newTimestamp: BigInt): boolean {
    let result = super.call("logTimestampSet", [
      EthereumValue.fromUnsignedBigInt(_newTimestamp)
    ]);
    return result[0].toBoolean();
  }

  logInitialReporterTransferred(
    _universe: Address,
    _market: Address,
    _from: Address,
    _to: Address
  ): boolean {
    let result = super.call("logInitialReporterTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to)
    ]);
    return result[0].toBoolean();
  }

  logInitialReporterRedeemed(
    _universe: Address,
    _reporter: Address,
    _market: Address,
    _amountRedeemed: BigInt,
    _repReceived: BigInt,
    _reportingFeesReceived: BigInt,
    _payoutNumerators: Array<BigInt>
  ): boolean {
    let result = super.call("logInitialReporterRedeemed", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_reporter),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromUnsignedBigInt(_amountRedeemed),
      EthereumValue.fromUnsignedBigInt(_repReceived),
      EthereumValue.fromUnsignedBigInt(_reportingFeesReceived),
      EthereumValue.fromUnsignedBigIntArray(_payoutNumerators)
    ]);
    return result[0].toBoolean();
  }

  trustedTransfer(
    _token: Address,
    _from: Address,
    _to: Address,
    _amount: BigInt
  ): boolean {
    let result = super.call("trustedTransfer", [
      EthereumValue.fromAddress(_token),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    return result[0].toBoolean();
  }

  logReputationTokensTransferred(
    _universe: Address,
    _from: Address,
    _to: Address,
    _value: BigInt
  ): boolean {
    let result = super.call("logReputationTokensTransferred", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_value)
    ]);
    return result[0].toBoolean();
  }

  logCompleteSetsSold(
    _universe: Address,
    _market: Address,
    _account: Address,
    _numCompleteSets: BigInt
  ): boolean {
    let result = super.call("logCompleteSetsSold", [
      EthereumValue.fromAddress(_universe),
      EthereumValue.fromAddress(_market),
      EthereumValue.fromAddress(_account),
      EthereumValue.fromUnsignedBigInt(_numCompleteSets)
    ]);
    return result[0].toBoolean();
  }
}

export class LogDisputeCrowdsourcerRedeemedCall extends EthereumCall {
  get inputs(): LogDisputeCrowdsourcerRedeemedCall__Inputs {
    return new LogDisputeCrowdsourcerRedeemedCall__Inputs(this);
  }

  get outputs(): LogDisputeCrowdsourcerRedeemedCall__Outputs {
    return new LogDisputeCrowdsourcerRedeemedCall__Outputs(this);
  }
}

export class LogDisputeCrowdsourcerRedeemedCall__Inputs {
  _call: LogDisputeCrowdsourcerRedeemedCall;

  constructor(call: LogDisputeCrowdsourcerRedeemedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reporter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amountRedeemed(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _repReceived(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _reportingFeesReceived(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _payoutNumerators(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class LogDisputeCrowdsourcerRedeemedCall__Outputs {
  _call: LogDisputeCrowdsourcerRedeemedCall;

  constructor(call: LogDisputeCrowdsourcerRedeemedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketCreatedCall extends EthereumCall {
  get inputs(): LogMarketCreatedCall__Inputs {
    return new LogMarketCreatedCall__Inputs(this);
  }

  get outputs(): LogMarketCreatedCall__Outputs {
    return new LogMarketCreatedCall__Outputs(this);
  }
}

export class LogMarketCreatedCall__Inputs {
  _call: LogMarketCreatedCall;

  constructor(call: LogMarketCreatedCall) {
    this._call = call;
  }

  get _topic(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _extraInfo(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _universe(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _marketCreator(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _outcomes(): Array<Bytes> {
    return this._call.inputValues[6].value.toBytesArray();
  }

  get _minPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _maxPrice(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _marketType(): i32 {
    return this._call.inputValues[9].value.toI32();
  }
}

export class LogMarketCreatedCall__Outputs {
  _call: LogMarketCreatedCall;

  constructor(call: LogMarketCreatedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogOrderCreatedCall extends EthereumCall {
  get inputs(): LogOrderCreatedCall__Inputs {
    return new LogOrderCreatedCall__Inputs(this);
  }

  get outputs(): LogOrderCreatedCall__Outputs {
    return new LogOrderCreatedCall__Outputs(this);
  }
}

export class LogOrderCreatedCall__Inputs {
  _call: LogOrderCreatedCall;

  constructor(call: LogOrderCreatedCall) {
    this._call = call;
  }

  get _orderType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _creator(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _moneyEscrowed(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _sharesEscrowed(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _tradeGroupId(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get _orderId(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get _universe(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _shareToken(): Address {
    return this._call.inputValues[9].value.toAddress();
  }
}

export class LogOrderCreatedCall__Outputs {
  _call: LogOrderCreatedCall;

  constructor(call: LogOrderCreatedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogDisputeCrowdsourcerTokensBurnedCall extends EthereumCall {
  get inputs(): LogDisputeCrowdsourcerTokensBurnedCall__Inputs {
    return new LogDisputeCrowdsourcerTokensBurnedCall__Inputs(this);
  }

  get outputs(): LogDisputeCrowdsourcerTokensBurnedCall__Outputs {
    return new LogDisputeCrowdsourcerTokensBurnedCall__Outputs(this);
  }
}

export class LogDisputeCrowdsourcerTokensBurnedCall__Inputs {
  _call: LogDisputeCrowdsourcerTokensBurnedCall;

  constructor(call: LogDisputeCrowdsourcerTokensBurnedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogDisputeCrowdsourcerTokensBurnedCall__Outputs {
  _call: LogDisputeCrowdsourcerTokensBurnedCall;

  constructor(call: LogDisputeCrowdsourcerTokensBurnedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogReportingParticipantDisavowedCall extends EthereumCall {
  get inputs(): LogReportingParticipantDisavowedCall__Inputs {
    return new LogReportingParticipantDisavowedCall__Inputs(this);
  }

  get outputs(): LogReportingParticipantDisavowedCall__Outputs {
    return new LogReportingParticipantDisavowedCall__Outputs(this);
  }
}

export class LogReportingParticipantDisavowedCall__Inputs {
  _call: LogReportingParticipantDisavowedCall;

  constructor(call: LogReportingParticipantDisavowedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class LogReportingParticipantDisavowedCall__Outputs {
  _call: LogReportingParticipantDisavowedCall;

  constructor(call: LogReportingParticipantDisavowedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketMigratedCall extends EthereumCall {
  get inputs(): LogMarketMigratedCall__Inputs {
    return new LogMarketMigratedCall__Inputs(this);
  }

  get outputs(): LogMarketMigratedCall__Outputs {
    return new LogMarketMigratedCall__Outputs(this);
  }
}

export class LogMarketMigratedCall__Inputs {
  _call: LogMarketMigratedCall;

  constructor(call: LogMarketMigratedCall) {
    this._call = call;
  }

  get _market(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _originalUniverse(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class LogMarketMigratedCall__Outputs {
  _call: LogMarketMigratedCall;

  constructor(call: LogMarketMigratedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketTransferredCall extends EthereumCall {
  get inputs(): LogMarketTransferredCall__Inputs {
    return new LogMarketTransferredCall__Inputs(this);
  }

  get outputs(): LogMarketTransferredCall__Outputs {
    return new LogMarketTransferredCall__Outputs(this);
  }
}

export class LogMarketTransferredCall__Inputs {
  _call: LogMarketTransferredCall;

  constructor(call: LogMarketTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class LogMarketTransferredCall__Outputs {
  _call: LogMarketTransferredCall;

  constructor(call: LogMarketTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogFeeTokenMintedCall extends EthereumCall {
  get inputs(): LogFeeTokenMintedCall__Inputs {
    return new LogFeeTokenMintedCall__Inputs(this);
  }

  get outputs(): LogFeeTokenMintedCall__Outputs {
    return new LogFeeTokenMintedCall__Outputs(this);
  }
}

export class LogFeeTokenMintedCall__Inputs {
  _call: LogFeeTokenMintedCall;

  constructor(call: LogFeeTokenMintedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogFeeTokenMintedCall__Outputs {
  _call: LogFeeTokenMintedCall;

  constructor(call: LogFeeTokenMintedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketFinalizedCall extends EthereumCall {
  get inputs(): LogMarketFinalizedCall__Inputs {
    return new LogMarketFinalizedCall__Inputs(this);
  }

  get outputs(): LogMarketFinalizedCall__Outputs {
    return new LogMarketFinalizedCall__Outputs(this);
  }
}

export class LogMarketFinalizedCall__Inputs {
  _call: LogMarketFinalizedCall;

  constructor(call: LogMarketFinalizedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LogMarketFinalizedCall__Outputs {
  _call: LogMarketFinalizedCall;

  constructor(call: LogMarketFinalizedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketMailboxTransferredCall extends EthereumCall {
  get inputs(): LogMarketMailboxTransferredCall__Inputs {
    return new LogMarketMailboxTransferredCall__Inputs(this);
  }

  get outputs(): LogMarketMailboxTransferredCall__Outputs {
    return new LogMarketMailboxTransferredCall__Outputs(this);
  }
}

export class LogMarketMailboxTransferredCall__Inputs {
  _call: LogMarketMailboxTransferredCall;

  constructor(call: LogMarketMailboxTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class LogMarketMailboxTransferredCall__Outputs {
  _call: LogMarketMailboxTransferredCall;

  constructor(call: LogMarketMailboxTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogFeeTokenTransferredCall extends EthereumCall {
  get inputs(): LogFeeTokenTransferredCall__Inputs {
    return new LogFeeTokenTransferredCall__Inputs(this);
  }

  get outputs(): LogFeeTokenTransferredCall__Outputs {
    return new LogFeeTokenTransferredCall__Outputs(this);
  }
}

export class LogFeeTokenTransferredCall__Inputs {
  _call: LogFeeTokenTransferredCall;

  constructor(call: LogFeeTokenTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogFeeTokenTransferredCall__Outputs {
  _call: LogFeeTokenTransferredCall;

  constructor(call: LogFeeTokenTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogFeeWindowRedeemedCall extends EthereumCall {
  get inputs(): LogFeeWindowRedeemedCall__Inputs {
    return new LogFeeWindowRedeemedCall__Inputs(this);
  }

  get outputs(): LogFeeWindowRedeemedCall__Outputs {
    return new LogFeeWindowRedeemedCall__Outputs(this);
  }
}

export class LogFeeWindowRedeemedCall__Inputs {
  _call: LogFeeWindowRedeemedCall;

  constructor(call: LogFeeWindowRedeemedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reporter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amountRedeemed(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _reportingFeesReceived(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogFeeWindowRedeemedCall__Outputs {
  _call: LogFeeWindowRedeemedCall;

  constructor(call: LogFeeWindowRedeemedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogReputationTokenBurnedCall extends EthereumCall {
  get inputs(): LogReputationTokenBurnedCall__Inputs {
    return new LogReputationTokenBurnedCall__Inputs(this);
  }

  get outputs(): LogReputationTokenBurnedCall__Outputs {
    return new LogReputationTokenBurnedCall__Outputs(this);
  }
}

export class LogReputationTokenBurnedCall__Inputs {
  _call: LogReputationTokenBurnedCall;

  constructor(call: LogReputationTokenBurnedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogReputationTokenBurnedCall__Outputs {
  _call: LogReputationTokenBurnedCall;

  constructor(call: LogReputationTokenBurnedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogUniverseForkedCall extends EthereumCall {
  get inputs(): LogUniverseForkedCall__Inputs {
    return new LogUniverseForkedCall__Inputs(this);
  }

  get outputs(): LogUniverseForkedCall__Outputs {
    return new LogUniverseForkedCall__Outputs(this);
  }
}

export class LogUniverseForkedCall__Inputs {
  _call: LogUniverseForkedCall;

  constructor(call: LogUniverseForkedCall) {
    this._call = call;
  }
}

export class LogUniverseForkedCall__Outputs {
  _call: LogUniverseForkedCall;

  constructor(call: LogUniverseForkedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogDisputeCrowdsourcerCompletedCall extends EthereumCall {
  get inputs(): LogDisputeCrowdsourcerCompletedCall__Inputs {
    return new LogDisputeCrowdsourcerCompletedCall__Inputs(this);
  }

  get outputs(): LogDisputeCrowdsourcerCompletedCall__Outputs {
    return new LogDisputeCrowdsourcerCompletedCall__Outputs(this);
  }
}

export class LogDisputeCrowdsourcerCompletedCall__Inputs {
  _call: LogDisputeCrowdsourcerCompletedCall;

  constructor(call: LogDisputeCrowdsourcerCompletedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _disputeCrowdsourcer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class LogDisputeCrowdsourcerCompletedCall__Outputs {
  _call: LogDisputeCrowdsourcerCompletedCall;

  constructor(call: LogDisputeCrowdsourcerCompletedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogDisputeCrowdsourcerTokensTransferredCall extends EthereumCall {
  get inputs(): LogDisputeCrowdsourcerTokensTransferredCall__Inputs {
    return new LogDisputeCrowdsourcerTokensTransferredCall__Inputs(this);
  }

  get outputs(): LogDisputeCrowdsourcerTokensTransferredCall__Outputs {
    return new LogDisputeCrowdsourcerTokensTransferredCall__Outputs(this);
  }
}

export class LogDisputeCrowdsourcerTokensTransferredCall__Inputs {
  _call: LogDisputeCrowdsourcerTokensTransferredCall;

  constructor(call: LogDisputeCrowdsourcerTokensTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogDisputeCrowdsourcerTokensTransferredCall__Outputs {
  _call: LogDisputeCrowdsourcerTokensTransferredCall;

  constructor(call: LogDisputeCrowdsourcerTokensTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogDisputeCrowdsourcerContributionCall extends EthereumCall {
  get inputs(): LogDisputeCrowdsourcerContributionCall__Inputs {
    return new LogDisputeCrowdsourcerContributionCall__Inputs(this);
  }

  get outputs(): LogDisputeCrowdsourcerContributionCall__Outputs {
    return new LogDisputeCrowdsourcerContributionCall__Outputs(this);
  }
}

export class LogDisputeCrowdsourcerContributionCall__Inputs {
  _call: LogDisputeCrowdsourcerContributionCall;

  constructor(call: LogDisputeCrowdsourcerContributionCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reporter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _disputeCrowdsourcer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _amountStaked(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class LogDisputeCrowdsourcerContributionCall__Outputs {
  _call: LogDisputeCrowdsourcerContributionCall;

  constructor(call: LogDisputeCrowdsourcerContributionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogFeeWindowBurnedCall extends EthereumCall {
  get inputs(): LogFeeWindowBurnedCall__Inputs {
    return new LogFeeWindowBurnedCall__Inputs(this);
  }

  get outputs(): LogFeeWindowBurnedCall__Outputs {
    return new LogFeeWindowBurnedCall__Outputs(this);
  }
}

export class LogFeeWindowBurnedCall__Inputs {
  _call: LogFeeWindowBurnedCall;

  constructor(call: LogFeeWindowBurnedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogFeeWindowBurnedCall__Outputs {
  _call: LogFeeWindowBurnedCall;

  constructor(call: LogFeeWindowBurnedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogTradingProceedsClaimedCall extends EthereumCall {
  get inputs(): LogTradingProceedsClaimedCall__Inputs {
    return new LogTradingProceedsClaimedCall__Inputs(this);
  }

  get outputs(): LogTradingProceedsClaimedCall__Outputs {
    return new LogTradingProceedsClaimedCall__Outputs(this);
  }
}

export class LogTradingProceedsClaimedCall__Inputs {
  _call: LogTradingProceedsClaimedCall;

  constructor(call: LogTradingProceedsClaimedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _shareToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _numShares(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _numPayoutTokens(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _finalTokenBalance(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class LogTradingProceedsClaimedCall__Outputs {
  _call: LogTradingProceedsClaimedCall;

  constructor(call: LogTradingProceedsClaimedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogFeeWindowMintedCall extends EthereumCall {
  get inputs(): LogFeeWindowMintedCall__Inputs {
    return new LogFeeWindowMintedCall__Inputs(this);
  }

  get outputs(): LogFeeWindowMintedCall__Outputs {
    return new LogFeeWindowMintedCall__Outputs(this);
  }
}

export class LogFeeWindowMintedCall__Inputs {
  _call: LogFeeWindowMintedCall;

  constructor(call: LogFeeWindowMintedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogFeeWindowMintedCall__Outputs {
  _call: LogFeeWindowMintedCall;

  constructor(call: LogFeeWindowMintedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogOrderCanceledCall extends EthereumCall {
  get inputs(): LogOrderCanceledCall__Inputs {
    return new LogOrderCanceledCall__Inputs(this);
  }

  get outputs(): LogOrderCanceledCall__Outputs {
    return new LogOrderCanceledCall__Outputs(this);
  }
}

export class LogOrderCanceledCall__Inputs {
  _call: LogOrderCanceledCall;

  constructor(call: LogOrderCanceledCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _shareToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _orderId(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _orderType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _tokenRefund(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _sharesRefund(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class LogOrderCanceledCall__Outputs {
  _call: LogOrderCanceledCall;

  constructor(call: LogOrderCanceledCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogInitialReportSubmittedCall extends EthereumCall {
  get inputs(): LogInitialReportSubmittedCall__Inputs {
    return new LogInitialReportSubmittedCall__Inputs(this);
  }

  get outputs(): LogInitialReportSubmittedCall__Outputs {
    return new LogInitialReportSubmittedCall__Outputs(this);
  }
}

export class LogInitialReportSubmittedCall__Inputs {
  _call: LogInitialReportSubmittedCall;

  constructor(call: LogInitialReportSubmittedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reporter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amountStaked(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _isDesignatedReporter(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _payoutNumerators(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _invalid(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }
}

export class LogInitialReportSubmittedCall__Outputs {
  _call: LogInitialReportSubmittedCall;

  constructor(call: LogInitialReportSubmittedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogFeeWindowTransferredCall extends EthereumCall {
  get inputs(): LogFeeWindowTransferredCall__Inputs {
    return new LogFeeWindowTransferredCall__Inputs(this);
  }

  get outputs(): LogFeeWindowTransferredCall__Outputs {
    return new LogFeeWindowTransferredCall__Outputs(this);
  }
}

export class LogFeeWindowTransferredCall__Inputs {
  _call: LogFeeWindowTransferredCall;

  constructor(call: LogFeeWindowTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogFeeWindowTransferredCall__Outputs {
  _call: LogFeeWindowTransferredCall;

  constructor(call: LogFeeWindowTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogReputationTokenMintedCall extends EthereumCall {
  get inputs(): LogReputationTokenMintedCall__Inputs {
    return new LogReputationTokenMintedCall__Inputs(this);
  }

  get outputs(): LogReputationTokenMintedCall__Outputs {
    return new LogReputationTokenMintedCall__Outputs(this);
  }
}

export class LogReputationTokenMintedCall__Inputs {
  _call: LogReputationTokenMintedCall;

  constructor(call: LogReputationTokenMintedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogReputationTokenMintedCall__Outputs {
  _call: LogReputationTokenMintedCall;

  constructor(call: LogReputationTokenMintedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DisputeCrowdsourcerCreatedCall extends EthereumCall {
  get inputs(): DisputeCrowdsourcerCreatedCall__Inputs {
    return new DisputeCrowdsourcerCreatedCall__Inputs(this);
  }

  get outputs(): DisputeCrowdsourcerCreatedCall__Outputs {
    return new DisputeCrowdsourcerCreatedCall__Outputs(this);
  }
}

export class DisputeCrowdsourcerCreatedCall__Inputs {
  _call: DisputeCrowdsourcerCreatedCall;

  constructor(call: DisputeCrowdsourcerCreatedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _disputeCrowdsourcer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _payoutNumerators(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _size(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _invalid(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class DisputeCrowdsourcerCreatedCall__Outputs {
  _call: DisputeCrowdsourcerCreatedCall;

  constructor(call: DisputeCrowdsourcerCreatedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogOrderFilledCall extends EthereumCall {
  get inputs(): LogOrderFilledCall__Inputs {
    return new LogOrderFilledCall__Inputs(this);
  }

  get outputs(): LogOrderFilledCall__Outputs {
    return new LogOrderFilledCall__Outputs(this);
  }
}

export class LogOrderFilledCall__Inputs {
  _call: LogOrderFilledCall;

  constructor(call: LogOrderFilledCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _shareToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _filler(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _orderId(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _numCreatorShares(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _numCreatorTokens(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _numFillerShares(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _numFillerTokens(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _marketCreatorFees(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _reporterFees(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _amountFilled(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }

  get _tradeGroupId(): Bytes {
    return this._call.inputValues[11].value.toBytes();
  }
}

export class LogOrderFilledCall__Outputs {
  _call: LogOrderFilledCall;

  constructor(call: LogOrderFilledCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogShareTokensTransferredCall extends EthereumCall {
  get inputs(): LogShareTokensTransferredCall__Inputs {
    return new LogShareTokensTransferredCall__Inputs(this);
  }

  get outputs(): LogShareTokensTransferredCall__Outputs {
    return new LogShareTokensTransferredCall__Outputs(this);
  }
}

export class LogShareTokensTransferredCall__Inputs {
  _call: LogShareTokensTransferredCall;

  constructor(call: LogShareTokensTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogShareTokensTransferredCall__Outputs {
  _call: LogShareTokensTransferredCall;

  constructor(call: LogShareTokensTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateChildUniverseCall extends EthereumCall {
  get inputs(): CreateChildUniverseCall__Inputs {
    return new CreateChildUniverseCall__Inputs(this);
  }

  get outputs(): CreateChildUniverseCall__Outputs {
    return new CreateChildUniverseCall__Outputs(this);
  }
}

export class CreateChildUniverseCall__Inputs {
  _call: CreateChildUniverseCall;

  constructor(call: CreateChildUniverseCall) {
    this._call = call;
  }

  get _parentPayoutDistributionHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _parentPayoutNumerators(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _parentInvalid(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CreateChildUniverseCall__Outputs {
  _call: CreateChildUniverseCall;

  constructor(call: CreateChildUniverseCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class LogFeeWindowCreatedCall extends EthereumCall {
  get inputs(): LogFeeWindowCreatedCall__Inputs {
    return new LogFeeWindowCreatedCall__Inputs(this);
  }

  get outputs(): LogFeeWindowCreatedCall__Outputs {
    return new LogFeeWindowCreatedCall__Outputs(this);
  }
}

export class LogFeeWindowCreatedCall__Inputs {
  _call: LogFeeWindowCreatedCall;

  constructor(call: LogFeeWindowCreatedCall) {
    this._call = call;
  }

  get _feeWindow(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class LogFeeWindowCreatedCall__Outputs {
  _call: LogFeeWindowCreatedCall;

  constructor(call: LogFeeWindowCreatedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetControllerCall extends EthereumCall {
  get inputs(): SetControllerCall__Inputs {
    return new SetControllerCall__Inputs(this);
  }

  get outputs(): SetControllerCall__Outputs {
    return new SetControllerCall__Outputs(this);
  }
}

export class SetControllerCall__Inputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }

  get _controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetControllerCall__Outputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateGenesisUniverseCall extends EthereumCall {
  get inputs(): CreateGenesisUniverseCall__Inputs {
    return new CreateGenesisUniverseCall__Inputs(this);
  }

  get outputs(): CreateGenesisUniverseCall__Outputs {
    return new CreateGenesisUniverseCall__Outputs(this);
  }
}

export class CreateGenesisUniverseCall__Inputs {
  _call: CreateGenesisUniverseCall;

  constructor(call: CreateGenesisUniverseCall) {
    this._call = call;
  }
}

export class CreateGenesisUniverseCall__Outputs {
  _call: CreateGenesisUniverseCall;

  constructor(call: CreateGenesisUniverseCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class LogFeeTokenBurnedCall extends EthereumCall {
  get inputs(): LogFeeTokenBurnedCall__Inputs {
    return new LogFeeTokenBurnedCall__Inputs(this);
  }

  get outputs(): LogFeeTokenBurnedCall__Outputs {
    return new LogFeeTokenBurnedCall__Outputs(this);
  }
}

export class LogFeeTokenBurnedCall__Inputs {
  _call: LogFeeTokenBurnedCall;

  constructor(call: LogFeeTokenBurnedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogFeeTokenBurnedCall__Outputs {
  _call: LogFeeTokenBurnedCall;

  constructor(call: LogFeeTokenBurnedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogShareTokenBurnedCall extends EthereumCall {
  get inputs(): LogShareTokenBurnedCall__Inputs {
    return new LogShareTokenBurnedCall__Inputs(this);
  }

  get outputs(): LogShareTokenBurnedCall__Outputs {
    return new LogShareTokenBurnedCall__Outputs(this);
  }
}

export class LogShareTokenBurnedCall__Inputs {
  _call: LogShareTokenBurnedCall;

  constructor(call: LogShareTokenBurnedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogShareTokenBurnedCall__Outputs {
  _call: LogShareTokenBurnedCall;

  constructor(call: LogShareTokenBurnedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogShareTokenMintedCall extends EthereumCall {
  get inputs(): LogShareTokenMintedCall__Inputs {
    return new LogShareTokenMintedCall__Inputs(this);
  }

  get outputs(): LogShareTokenMintedCall__Outputs {
    return new LogShareTokenMintedCall__Outputs(this);
  }
}

export class LogShareTokenMintedCall__Inputs {
  _call: LogShareTokenMintedCall;

  constructor(call: LogShareTokenMintedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogShareTokenMintedCall__Outputs {
  _call: LogShareTokenMintedCall;

  constructor(call: LogShareTokenMintedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogEscapeHatchChangedCall extends EthereumCall {
  get inputs(): LogEscapeHatchChangedCall__Inputs {
    return new LogEscapeHatchChangedCall__Inputs(this);
  }

  get outputs(): LogEscapeHatchChangedCall__Outputs {
    return new LogEscapeHatchChangedCall__Outputs(this);
  }
}

export class LogEscapeHatchChangedCall__Inputs {
  _call: LogEscapeHatchChangedCall;

  constructor(call: LogEscapeHatchChangedCall) {
    this._call = call;
  }

  get _isOn(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class LogEscapeHatchChangedCall__Outputs {
  _call: LogEscapeHatchChangedCall;

  constructor(call: LogEscapeHatchChangedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogDisputeCrowdsourcerTokensMintedCall extends EthereumCall {
  get inputs(): LogDisputeCrowdsourcerTokensMintedCall__Inputs {
    return new LogDisputeCrowdsourcerTokensMintedCall__Inputs(this);
  }

  get outputs(): LogDisputeCrowdsourcerTokensMintedCall__Outputs {
    return new LogDisputeCrowdsourcerTokensMintedCall__Outputs(this);
  }
}

export class LogDisputeCrowdsourcerTokensMintedCall__Inputs {
  _call: LogDisputeCrowdsourcerTokensMintedCall;

  constructor(call: LogDisputeCrowdsourcerTokensMintedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class LogDisputeCrowdsourcerTokensMintedCall__Outputs {
  _call: LogDisputeCrowdsourcerTokensMintedCall;

  constructor(call: LogDisputeCrowdsourcerTokensMintedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketCreated1Call extends EthereumCall {
  get inputs(): LogMarketCreated1Call__Inputs {
    return new LogMarketCreated1Call__Inputs(this);
  }

  get outputs(): LogMarketCreated1Call__Outputs {
    return new LogMarketCreated1Call__Outputs(this);
  }
}

export class LogMarketCreated1Call__Inputs {
  _call: LogMarketCreated1Call;

  constructor(call: LogMarketCreated1Call) {
    this._call = call;
  }

  get _topic(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _extraInfo(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _universe(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _marketCreator(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _minPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _maxPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _marketType(): i32 {
    return this._call.inputValues[8].value.toI32();
  }
}

export class LogMarketCreated1Call__Outputs {
  _call: LogMarketCreated1Call;

  constructor(call: LogMarketCreated1Call) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogCompleteSetsPurchasedCall extends EthereumCall {
  get inputs(): LogCompleteSetsPurchasedCall__Inputs {
    return new LogCompleteSetsPurchasedCall__Inputs(this);
  }

  get outputs(): LogCompleteSetsPurchasedCall__Outputs {
    return new LogCompleteSetsPurchasedCall__Outputs(this);
  }
}

export class LogCompleteSetsPurchasedCall__Inputs {
  _call: LogCompleteSetsPurchasedCall;

  constructor(call: LogCompleteSetsPurchasedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _account(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _numCompleteSets(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogCompleteSetsPurchasedCall__Outputs {
  _call: LogCompleteSetsPurchasedCall;

  constructor(call: LogCompleteSetsPurchasedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogMarketParticipantsDisavowedCall extends EthereumCall {
  get inputs(): LogMarketParticipantsDisavowedCall__Inputs {
    return new LogMarketParticipantsDisavowedCall__Inputs(this);
  }

  get outputs(): LogMarketParticipantsDisavowedCall__Outputs {
    return new LogMarketParticipantsDisavowedCall__Outputs(this);
  }
}

export class LogMarketParticipantsDisavowedCall__Inputs {
  _call: LogMarketParticipantsDisavowedCall;

  constructor(call: LogMarketParticipantsDisavowedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LogMarketParticipantsDisavowedCall__Outputs {
  _call: LogMarketParticipantsDisavowedCall;

  constructor(call: LogMarketParticipantsDisavowedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogTimestampSetCall extends EthereumCall {
  get inputs(): LogTimestampSetCall__Inputs {
    return new LogTimestampSetCall__Inputs(this);
  }

  get outputs(): LogTimestampSetCall__Outputs {
    return new LogTimestampSetCall__Outputs(this);
  }
}

export class LogTimestampSetCall__Inputs {
  _call: LogTimestampSetCall;

  constructor(call: LogTimestampSetCall) {
    this._call = call;
  }

  get _newTimestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LogTimestampSetCall__Outputs {
  _call: LogTimestampSetCall;

  constructor(call: LogTimestampSetCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogInitialReporterTransferredCall extends EthereumCall {
  get inputs(): LogInitialReporterTransferredCall__Inputs {
    return new LogInitialReporterTransferredCall__Inputs(this);
  }

  get outputs(): LogInitialReporterTransferredCall__Outputs {
    return new LogInitialReporterTransferredCall__Outputs(this);
  }
}

export class LogInitialReporterTransferredCall__Inputs {
  _call: LogInitialReporterTransferredCall;

  constructor(call: LogInitialReporterTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class LogInitialReporterTransferredCall__Outputs {
  _call: LogInitialReporterTransferredCall;

  constructor(call: LogInitialReporterTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogInitialReporterRedeemedCall extends EthereumCall {
  get inputs(): LogInitialReporterRedeemedCall__Inputs {
    return new LogInitialReporterRedeemedCall__Inputs(this);
  }

  get outputs(): LogInitialReporterRedeemedCall__Outputs {
    return new LogInitialReporterRedeemedCall__Outputs(this);
  }
}

export class LogInitialReporterRedeemedCall__Inputs {
  _call: LogInitialReporterRedeemedCall;

  constructor(call: LogInitialReporterRedeemedCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reporter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amountRedeemed(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _repReceived(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _reportingFeesReceived(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _payoutNumerators(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class LogInitialReporterRedeemedCall__Outputs {
  _call: LogInitialReporterRedeemedCall;

  constructor(call: LogInitialReporterRedeemedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TrustedTransferCall extends EthereumCall {
  get inputs(): TrustedTransferCall__Inputs {
    return new TrustedTransferCall__Inputs(this);
  }

  get outputs(): TrustedTransferCall__Outputs {
    return new TrustedTransferCall__Outputs(this);
  }
}

export class TrustedTransferCall__Inputs {
  _call: TrustedTransferCall;

  constructor(call: TrustedTransferCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TrustedTransferCall__Outputs {
  _call: TrustedTransferCall;

  constructor(call: TrustedTransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogReputationTokensTransferredCall extends EthereumCall {
  get inputs(): LogReputationTokensTransferredCall__Inputs {
    return new LogReputationTokensTransferredCall__Inputs(this);
  }

  get outputs(): LogReputationTokensTransferredCall__Outputs {
    return new LogReputationTokensTransferredCall__Outputs(this);
  }
}

export class LogReputationTokensTransferredCall__Inputs {
  _call: LogReputationTokensTransferredCall;

  constructor(call: LogReputationTokensTransferredCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogReputationTokensTransferredCall__Outputs {
  _call: LogReputationTokensTransferredCall;

  constructor(call: LogReputationTokensTransferredCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogCompleteSetsSoldCall extends EthereumCall {
  get inputs(): LogCompleteSetsSoldCall__Inputs {
    return new LogCompleteSetsSoldCall__Inputs(this);
  }

  get outputs(): LogCompleteSetsSoldCall__Outputs {
    return new LogCompleteSetsSoldCall__Outputs(this);
  }
}

export class LogCompleteSetsSoldCall__Inputs {
  _call: LogCompleteSetsSoldCall;

  constructor(call: LogCompleteSetsSoldCall) {
    this._call = call;
  }

  get _universe(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _market(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _account(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _numCompleteSets(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LogCompleteSetsSoldCall__Outputs {
  _call: LogCompleteSetsSoldCall;

  constructor(call: LogCompleteSetsSoldCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
